schema {
  query: Query
}

directive @discriminator(field: String, mapping: ObjMap) on INTERFACE | UNION

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Cat implements Pet {
  name: String!
  petType: String
}

interface Pet @discriminator(field: "petType", mapping: "{\"pet-cat\":\"Cat\",\"pet-dog\":\"Dog\"}") {
  name: String!
  petType: String
}

type Dog implements Pet {
  name: String!
  petType: String
}

type Query @globalOptions(sourceName: "petStore", endpoint: "http://localhost:3000/") {
  pets_by_id(id: String!): Pet @httpOperation(path: "/pets/{args.id}", operationSpecificHeaders: "{\"accept\":\"application/json\"}", httpMethod: GET)
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}